--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v105=0;local v106;while true do if (v105==1) then return v106;end if (v105==0) then v106=v5(v82,v19);v19=nil;v105=1;end end else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==(0 + 0)) then v84=(v31/((5 -3)^(v32-(1 -(877 -(282 + 595))))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + (1711 -(1523 + 114)))))) + 1)) ;return v84-(v84%(569 -(367 + 201))) ;end end else local v85=2^(v32-(928 -(214 + 713))) ;return (((v31%(v85 + v85))>=v85) and (1 + 0 + 0)) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -(0 + 0) ;local v36;local v37;while true do if (v35==(1065 -(68 + 997))) then v36,v37=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + ((2 + 6) -(963 -(892 + 65))) ;v35=1;end if (v35==1) then return (v37 * (373 -(32 + 85))) + v36 ;end end end local function v23() local v38=0 -0 ;local v39;local v40;local v41;local v42;while true do if (v38==(2 -(953 -(802 + 150)))) then return (v42 * (31011612 -14234396)) + (v41 * (120312 -(147475 -92699))) + (v40 * (606 -(87 + 263))) + v39 ;end if (v38==((326 -146) -(67 + 83 + 30))) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -5) ;v38=1 + 0 ;end end end local function v24() local v43=v23();local v44=v23();local v45=998 -(915 + (145 -63)) ;local v46=(v20(v44,(1082 -(1020 + 60)) -1 ,12 + 8 ) * ((6 -4)^((1464 -(630 + 793)) -9))) + v43 ;local v47=v20(v44,1208 -(1069 + 118) ,70 -39 );local v48=((v20(v44,69 -37 )==(431 -(44 + 386))) and  -(1487 -(998 + 488))) or (1 + 0) ;if (v47==0) then if (v46==((0 -0) + 0)) then return v48 * (772 -(201 + 571)) ;else local v92=0 -0 ;while true do if (v92==(0 + 0)) then v47=792 -((1742 -1374) + 423) ;v45=0 -(0 + 0) ;break;end end end elseif (v47==(7269 -5222)) then return ((v46==(0 -0)) and (v48 * ((19 -(10 + 8))/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(56 + 967) ) * (v45 + (v46/((1 + 1)^(937 -(261 + 624))))) ;end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==(1 + (2 -1))) then v52={};for v93=1748 -(760 + (2400 -(447 + 966))) , #v51 do v52[v93]=v2(v1(v3(v51,v93,v93)));end v50=3;end if (v50==(1914 -(1789 + 124))) then v51=v3(v16,v18,(v18 + v49) -(767 -(745 + 21)) );v18=v18 + v49 ;v50=8 -(16 -10) ;end if ((2 + 1)==v50) then return v6(v52);end if (v50==0) then v51=nil;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=3 -2 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0 + 0 ;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if (v53~=(0 -0)) then else local v89=(function() return 1086 -(461 + 625) ;end)();while true do if ((1636 -(1373 + 263))==v89) then v54=(function() return {};end)();v55=(function() return {};end)();v89=(function() return 1 + 0 ;end)();end if (v89==1) then v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v89=(function() return 1173 -(418 + 753) ;end)();end if (v89~=2) then else v53=(function() return  #":";end)();break;end end end if (v53==(1 + 1)) then for v95= #" ",v23() do local v96=(function() return 0 -0 ;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do if ((1 -0)==v96) then while true do if (v97~=(1384 -(746 + 638))) then else v98=(function() return v21();end)();if (v20(v98, #">", #"[")~=0) then else local v113=(function() return 0 + 0 ;end)();local v114=(function() return;end)();local v115=(function() return;end)();local v116=(function() return;end)();while true do if (v113==(1 + 1)) then if (v20(v115, #".", #"/")~= #">") then else v116[2 -0 ]=(function() return v59[v116[343 -(218 + 123) ]];end)();end if (v20(v115,2,1583 -(1535 + 46) )~= #":") then else v116[ #"gha"]=(function() return v59[v116[ #"gha"]];end)();end v113=(function() return 3 + 0 ;end)();end if (v113==(1 + 2)) then if (v20(v115, #"nil", #"91(")~= #".") then else v116[ #"asd1"]=(function() return v59[v116[ #"0313"]];end)();end v54[v95]=(function() return v116;end)();break;end if (v113==1) then local v211=(function() return 0;end)();while true do if (v211~=(0 + 0)) then else v116=(function() return {v22(),v22(),nil,nil};end)();if (v114==(560 -(306 + 254))) then local v324=(function() return 0;end)();local v325=(function() return;end)();while true do if (v324==(0 + 0)) then v325=(function() return 1145 -(466 + 679) ;end)();while true do if (v325~=(0 -0)) then else v116[ #"91("]=(function() return v22();end)();v116[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v114== #" ") then v116[ #"91("]=(function() return v23();end)();elseif (v114==(4 -2)) then v116[ #"-19"]=(function() return v23() -((5 -3)^(1916 -(106 + 1794))) ;end)();elseif (v114== #"gha") then local v356=(function() return 0;end)();local v357=(function() return;end)();while true do if ((1467 -(899 + 568))==v356) then v357=(function() return 0 + 0 ;end)();while true do if ((0 -0)~=v357) then else v116[ #"xxx"]=(function() return v23() -(2^(46 -30)) ;end)();v116[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v211=(function() return 1;end)();end if (1==v211) then v113=(function() return 605 -(268 + 335) ;end)();break;end end end if (v113==(290 -(60 + 230))) then local v212=(function() return 572 -(426 + 146) ;end)();while true do if (v212~=(115 -(4 + 110))) then else v113=(function() return 1;end)();break;end if (v212==0) then v114=(function() return v20(v98,1 + 1 , #"91(");end)();v115=(function() return v20(v98, #"0836",6);end)();v212=(function() return 1457 -(282 + 1174) ;end)();end end end end end break;end end break;end if (v96~=0) then else v97=(function() return 811 -(569 + 242) ;end)();v98=(function() return nil;end)();v96=(function() return 1;end)();end end end for v99= #".",v23() do v55[v99-#"[" ]=(function() return v28();end)();end return v57;end if (v53~= #"<") then else local v90=(function() return 584 -(57 + 527) ;end)();local v91=(function() return;end)();while true do if (v90==(1427 -(41 + 1386))) then v91=(function() return 103 -(17 + 86) ;end)();while true do if (v91==(2 -1)) then for v108= #".",v58 do local v109=(function() return 0 + 0 ;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v109~=1) then else v112=(function() return nil;end)();while true do if ( #"."==v110) then if (v111== #">") then v112=(function() return v21()~=(0 -0) ;end)();elseif (v111==2) then v112=(function() return v24();end)();elseif (v111~= #"-19") then else v112=(function() return v25();end)();end v59[v108]=(function() return v112;end)();break;end if (v110~=(1024 -(706 + 318))) then else local v232=(function() return 0 -0 ;end)();while true do if (v232~=(1252 -(721 + 530))) then else v110=(function() return  #",";end)();break;end if (v232==(0 -0)) then v111=(function() return v21();end)();v112=(function() return nil;end)();v232=(function() return 3 -2 ;end)();end end end end break;end if (v109==(0 + 0)) then local v117=(function() return 1271 -(945 + 326) ;end)();while true do if (v117~=(0 -0)) then else v110=(function() return 0 -0 ;end)();v111=(function() return nil;end)();v117=(function() return 66 -(30 + 35) ;end)();end if ((1 + 0)==v117) then v109=(function() return 1;end)();break;end end end end end v57[ #"gha"]=(function() return v21();end)();v91=(function() return 2 + 0 ;end)();end if (v91~=(1259 -(1043 + 214))) then else v53=(function() return 2;end)();break;end if (v91==(700 -(271 + 429))) then v58=(function() return v23();end)();v59=(function() return {};end)();v91=(function() return 1;end)();end end break;end end end end end local function v29(v60,v61,v62) local v63=v60[1213 -(323 + 889) ];local v64=v60[5 -3 ];local v65=v60[583 -(361 + 160 + 59) ];return function(...) local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=321 -(53 + 267) ;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -(414 -(15 + 398)) ;local v75={};local v76={};for v86=982 -(18 + 964) ,v74 do if ((v86>=v68) or (4136==2516)) then v72[v86-v68 ]=v73[v86 + (3 -2) ];else v76[v86]=v73[v86 + 1 + 0 + 0 ];end end local v77=(v74-v68) + 1 + 0 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if ((v79<=(883 -(20 + 830))) or (3772<=1782)) then if (v79<=(13 + 3)) then if (v79<=(133 -((1549 -(797 + 636)) + 10))) then if (v79<=3) then if ((v79<=(1 + 0)) or (4700<813)) then if (v79>(738 -(542 + 196))) then v76[v78[9 -7 ]][v78[6 -3 ]]=v78[2 + 2 ];else local v120=0 + 0 ;local v121;local v122;while true do if (v120==1) then for v275=1 + 0 , #v75 do local v276=0 -0 ;local v277;while true do if (v276==((1619 -(1427 + 192)) -(0 + 0))) then v277=v75[v275];for v338=1551 -(1126 + (986 -561)) , #v277 do local v339=v277[v338];local v340=v339[1 + 0 ];local v341=v339[(185 + 222) -(118 + 287) ];if ((v340==v76) and (v341>=v121)) then v122[v341]=v340[v341];v339[3 -2 ]=v122;end end break;end end end break;end if (v120==(1121 -(118 + 1003))) then v121=v78[5 -3 ];v122={};v120=378 -(142 + 235) ;end end end elseif ((3199<4050) and (v79==((335 -(192 + 134)) -7))) then v76[v78[2]]=v76[v78[(1277 -(316 + 960)) + 2 ]];else v76[v78[979 -(553 + 424) ]]=v78[5 -2 ]~=(0 + 0 + 0) ;end elseif ((v79<=5) or (4951<4430)) then if (v79==(4 + 0)) then local v126=v78[2 + 0 ];local v127={v76[v126](v76[v126 + 1 + 0 ])};local v128=0 -0 ;for v213=v126,v78[4] do local v214=0 -(0 + 0) ;while true do if (v214==0) then v128=v128 + (2 -1) ;v76[v213]=v127[v128];break;end end end else do return v76[v78[2]];end end elseif ((96==96) and (v79>6)) then local v129=0 + 0 ;local v130;while true do if (v129==(0 -0)) then v130=v78[755 -(239 + 514) ];v76[v130]=v76[v130](v76[v130 + 1 + 0 ]);break;end end else v76[v78[2 + 0 ]]={};end elseif ((v79<=11) or (2739>4008)) then if ((v79<=(1338 -(797 + 532))) or (23==1134)) then if ((v79==(6 + 2)) or (2693>=4111)) then local v132=v78[1 + 1 ];local v133=v78[9 -5 ];local v134=v132 + (1204 -(373 + 829)) ;local v135={v76[v132](v76[v132 + (1131 -(369 + 761)) ],v76[v134])};for v215=1 + 0 ,v133 do v76[v134 + v215 ]=v135[v215];end local v136=v135[1 -0 ];if (v136 or (4316<=2146)) then local v233=0 -0 ;while true do if (v233==(238 -(64 + 174))) then v76[v134]=v136;v70=v78[(3 -2) + 2 ];break;end end else v70=v70 + (1 -0) ;end else local v137=v78[338 -(144 + 192) ];do return v13(v76,v137,v137 + v78[219 -(42 + 174) ] );end end elseif (v79==10) then v76[v78[2]]();else local v138=v78[2 + 0 ];local v139=v76[v78[3 + (551 -(83 + 468)) ]];v76[v138 + 1 ]=v139;v76[v138]=v139[v78[(1808 -(1202 + 604)) + 2 ]];end elseif ((v79<=(1517 -(363 + 1141))) or (3546<=2809)) then if (v79>12) then v76[v78[(7385 -5803) -(1183 + 397) ]]=v62[v78[8 -5 ]];elseif  not v76[v78[2]] then v70=v70 + 1 + 0 ;else v70=v78[3 + 0 ];end elseif ((4904>2166) and (v79<=14)) then if v76[v78[1977 -(1913 + (102 -40)) ]] then v70=v70 + 1 + 0 ;else v70=v78[7 -4 ];end elseif (v79==15) then local v236=1933 -(565 + 1368) ;local v237;local v238;local v239;while true do if ((3 -2)==v236) then v239=v78[1664 -(1477 + 184) ];for v326=1,v239 do v238[v326]=v76[v237 + v326 ];end break;end if ((0 -0)==v236) then v237=v78[2 + 0 ];v238=v76[v237];v236=(2372 -1515) -((889 -(45 + 280)) + 292) ;end end else v76[v78[2 -0 ]]=v76[v78[(8 + 0) -5 ]];end elseif (v79<=24) then if (v79<=((284 + 40) -(244 + 60))) then if (v79<=(14 + 2 + 2)) then if ((109>=90) and (v79==(493 -(23 + 18 + 435)))) then local v145=v78[1003 -(938 + 63) ];v76[v145]=v76[v145]();else v76[v78[2 + 0 ]]=v76[v78[3]][v78[4]];end elseif ((4978>2905) and (v79==19)) then for v218=v78[1127 -(936 + 189) ],v78[1 + 1 + 1 ] do v76[v218]=nil;end else v76[v78[1615 -((2898 -1333) + 48) ]]=v61[v78[3]];end elseif (v79<=22) then if (v79>21) then local v151=0 + 0 ;local v152;local v153;local v154;while true do if ((v151==(1139 -(782 + 356))) or (3026<=2280)) then v154={};v153=v10({},{__index=function(v280,v281) local v282=267 -(176 + 91) ;local v283;while true do if (v282==(0 -0)) then v283=v154[v281];return v283[1 -0 ][v283[1094 -(975 + 117) ]];end end end,__newindex=function(v284,v285,v286) local v287=1875 -(157 + 1718) ;local v288;while true do if (v287==(0 + 0)) then v288=v154[v285];v288[3 -2 ][v288[2]]=v286;break;end end end});v151=6 -4 ;end if ((1020 -(697 + 321))==v151) then for v289=2 -(1773 -(1733 + 39)) ,v78[(21 -13) -4 ] do local v290=0 -0 ;local v291;while true do if (v290==0) then v70=v70 + 1 ;v291=v66[v70];v290=1 + 0 ;end if ((v290==(1 -0)) or (1653<=1108)) then if (v291[1]==(42 -26)) then v154[v289-1 ]={v76,v291[1192 -(449 + 740) ]};else v154[v289-(873 -(826 + 21 + 25)) ]={v61,v291[1 + 2 ]};end v75[ #v75 + (1899 -(260 + 1638)) ]=v154;break;end end end v76[v78[442 -(382 + 58) ]]=v29(v152,v153,v62);break;end if ((2909>2609) and (v151==((0 -0) -0))) then v152=v67[v78[3 + 0 + 0 ]];v153=nil;v151=1;end end else v62[v78[5 -2 ]]=v76[v78[5 -(515 -(409 + 103)) ]];end elseif (v79==(1228 -(902 + 303))) then v76[v78[2]]();elseif  not v76[v78[2]] then v70=v70 + (1 -0) ;else v70=v78[3];end elseif ((757>194) and (v79<=(67 -39))) then if ((v79<=(3 + 23)) or (31>=1398)) then if ((3196<=4872) and (v79>((1951 -(46 + 190)) -(1121 + 569)))) then v76[v78[2]]=v76[v78[3]][v78[218 -(22 + 192) ]];elseif (v78[685 -(483 + 200) ]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[1466 -(1404 + 59) ];end elseif ((3326==3326) and (v79==27)) then v76[v78[5 -3 ]]=v78[3 -0 ]~=(765 -(468 + (392 -(51 + 44)))) ;else v70=v78[3];end elseif (v79<=(592 -(334 + 228))) then if (v79==29) then if v76[v78[6 -4 ]] then v70=v70 + 1 ;else v70=v78[6 -3 ];end else v76[v78[2 -0 ]]=v62[v78[1 + 2 ]];end elseif (v79<=(267 -(141 + 95))) then if ((1433<=3878) and (v78[2 + 0 ]==v76[v78[9 -(2 + 3) ]])) then v70=v70 + (2 -1) ;else v70=v78[1320 -(1114 + 203) ];end elseif (v79>(8 + (750 -(228 + 498)))) then v76[v78[2]][v78[(2 + 6) -5 ]]=v78[3 + 1 ];else v76[v78[2]][v78[2 + 1 ]]=v76[v78[(3 + 2) -1 ]];end elseif (v79<=50) then if ((v79<=41) or (1583==1735)) then if (v79<=(22 + 15)) then if (v79<=(198 -((755 -(174 + 489)) + 71))) then if ((v79==(17 + 17)) or (2981==2350)) then local v163=v78[2 -0 ];v76[v163]=v76[v163](v13(v76,v163 + (766 -(574 + 191)) ,v78[3]));else v70=v78[3 + 0 ];end elseif ((v79==36) or (4466<=493)) then v76[v78[4 -2 ]]=v29(v67[v78[3]],nil,v62);else v76[v78[2 + (0 -0) ]]=v78[852 -(254 + 595) ];end elseif ((v79<=39) or (2547<=1987)) then if ((2961>2740) and (v79>(164 -(55 + 71)))) then local v169=0 -0 ;local v170;local v171;while true do if (v169==0) then v170=v78[1907 -(830 + 1075) ];v171=v76[v170];v169=1;end if ((3696>=3612) and (v169==(1791 -((1097 -(303 + 221)) + (2486 -(231 + 1038)))))) then for v292=v170 + (2 -1) ,v78[1 + 0 + 2 ] do v7(v171,v76[v292]);end break;end end else local v172=v78[2 -0 ];v76[v172](v76[v172 + (940 -(714 + (1387 -(171 + 991)))) ]);end elseif (v79>40) then v76[v78[2]][v78[8 -(20 -15) ]]=v76[v78[5 -1 ]];elseif (v76[v78[1 + 1 ]]==v76[v78[5 -1 ]]) then v70=v70 + (807 -(118 + 688)) ;else v70=v78[3];end elseif (v79<=45) then if ((v79<=(91 -(25 + (61 -38)))) or (2970==1878)) then if ((v79==(9 + 33)) or (3693<1977)) then if (v76[v78[2]]==v78[1890 -(927 + 959) ]) then v70=v70 + 1 ;else v70=v78[(24 -14) -7 ];end else local v175=v78[734 -(16 + 716) ];local v176=v78[7 -3 ];local v177=v175 + ((80 + 19) -(11 + 86)) ;local v178={v76[v175](v76[v175 + (286 -(175 + 110)) ],v76[v177])};for v220=(6 -4) -(2 -1) ,v176 do v76[v177 + v220 ]=v178[v220];end local v179=v178[(5 -1) -3 ];if v179 then v76[v177]=v179;v70=v78[1799 -(503 + 1293) ];else v70=v70 + ((6 -4) -1) ;end end elseif (v79==(32 + (1260 -(111 + 1137)))) then for v223=v78[1063 -(810 + 251) ],v78[3 + 0 ] do v76[v223]=nil;end else v76[v78[2]]=v61[v78[3]];end elseif (v79<=(15 + 32)) then if ((v79==(42 + 4)) or (930>2101)) then if (v76[v78[535 -(43 + 490) ]]==v78[737 -(711 + (180 -(91 + 67))) ]) then v70=v70 + (3 -2) ;else v70=v78[3];end else local v182=859 -(240 + (1842 -1223)) ;local v183;local v184;local v185;while true do if (v182==1) then v185=0 + 0 ;for v293=v183,v78[4] do v185=v185 + (1 -0) ;v76[v293]=v184[v185];end break;end if (v182==(0 + 0)) then v183=v78[1746 -(336 + 1008 + 400) ];v184={v76[v183](v76[v183 + (406 -(255 + 150)) ])};v182=1 + 0 ;end end end elseif ((4153>3086) and (v79<=(26 + 22))) then local v186=0;local v187;while true do if ((v186==(0 -0)) or (4654<=4050)) then v187=v78[6 -(527 -(423 + 100)) ];v76[v187](v13(v76,v187 + (1740 -(3 + 401 + 1335)) ,v78[3]));break;end end elseif ((v79==(455 -(183 + 223))) or (2602<1496)) then do return;end else local v255=(0 -0) -0 ;local v256;local v257;while true do if (v255==(1 + 0)) then v76[v256 + 1 + 0 ]=v257;v76[v256]=v257[v78[4]];break;end if ((v255==((176 + 161) -(10 + 327))) or (1020>2288)) then v256=v78[(773 -(326 + 445)) + 0 ];v257=v76[v78[3]];v255=1;end end end elseif (v79<=(396 -(118 + 220))) then if (v79<=(18 + (157 -121))) then if ((328==328) and (v79<=(501 -(108 + 341)))) then if (v79==((50 -27) + 28)) then local v188=v78[8 -6 ];v76[v188](v76[v188 + (1494 -(711 + 782)) ]);else local v189=v78[3 -(2 -1) ];local v190=v76[v189];local v191=v78[(1183 -(530 + 181)) -(270 + 199) ];for v225=1 + 0 ,v191 do v190[v225]=v76[v189 + v225 ];end end elseif (v79>(1872 -(580 + 1239))) then local v192=v78[5 -3 ];local v193={};for v228=1 + 0 , #v75 do local v229=0 + 0 ;local v230;while true do if (v229==(0 + 0)) then v230=v75[v228];for v319=0 -0 , #v230 do local v320=0 + 0 ;local v321;local v322;local v323;while true do if (v320==0) then v321=v230[v319];v322=v321[1168 -((1526 -(614 + 267)) + 522) ];v320=(1823 -(19 + 13)) -(1010 + 780) ;end if (v320==(1 + 0)) then v323=v321[9 -7 ];if ((v322==v76) and (v323>=v192)) then v193[v323]=v322[v323];v321[2 -1 ]=v193;end break;end end end break;end end end else v76[v78[2]]={};end elseif (v79<=((3078 -1186) -(1045 + 791))) then if (v79==(139 -(195 -111))) then local v195=v78[2 -(0 -0) ];v76[v195]=v76[v195](v76[v195 + (506 -(351 + 154)) ]);else do return;end end elseif (v79>57) then local v197=(409 + 1165) -(1281 + 293) ;local v198;local v199;local v200;while true do if ((0 -0)==v197) then v198=v67[v78[269 -(28 + 238) ]];v199=nil;v197=2 -1 ;end if (v197==(1561 -((2863 -1482) + 178))) then for v297=1,v78[4] do v70=v70 + 1 + 0 ;local v298=v66[v70];if (v298[(1813 -(1293 + 519)) + 0 ]==(7 + 9)) then v200[v297-(3 -2) ]={v76,v298[3]};else v200[v297-(1 + 0) ]={v61,v298[3 + 0 ]};end v75[ #v75 + 1 ]=v200;end v76[v78[2 -0 ]]=v29(v198,v199,v62);break;end if ((1157 -(1074 + 82))==v197) then v200={};v199=v10({},{__index=function(v300,v301) local v302=v200[v301];return v302[1 -0 ][v302[1786 -(214 + 1570) ]];end,__newindex=function(v303,v304,v305) local v306=v200[v304];v306[1456 -(990 + 465) ][v306[1 + 1 ]]=v305;end});v197=1 + 1 ;end end else local v201=v78[2 + 0 ];v76[v201]=v76[v201]();end elseif (v79<=(243 -(346 -165))) then if ((1511<3808) and (v79<=60)) then if (v79==(1785 -(1668 + 58))) then local v203=v78[(2707 -2079) -(512 + (268 -154)) ];v76[v203]=v76[v203](v13(v76,v203 + (2 -(1 + 0)) ,v78[5 -2 ]));elseif ((v76[v78[6 -(1 + 3) ]]==v76[v78[(4 -2) + 2 ]]) or (2510>4919)) then v70=v70 + 1 + 0 ;else v70=v78[3];end elseif ((4763==4763) and (v79>(13 + 41 + 7))) then v62[v78[3]]=v76[v78[6 -4 ]];elseif ((4137>1848) and (v76[v78[1996 -(37 + 72 + 1885) ]]<v78[1473 -(794 + 475 + 200) ])) then v70=v70 + (1 -0) ;else v70=v78[818 -(98 + 717) ];end elseif ((2436<=3134) and (v79<=(890 -(802 + 24)))) then if ((3723==3723) and (v79>(108 -45))) then local v207=v78[2];v76[v207](v13(v76,v207 + (1 -0) ,v78[1 + 2 ]));else do return v76[v78[2 + 0 ]];end end elseif (v79<=65) then v76[v78[1 + 1 ]]=v78[1099 -(709 + 387) ];elseif (v79==66) then v76[v78[1 + 1 ]]=v29(v67[v78[8 -5 ]],nil,v62);elseif (v76[v78[6 -4 ]]<v78[2 + 2 ]) then v70=v70 + (1859 -(673 + 1185)) + 0 ;else v70=v78[3];end v70=v70 + 1 + (0 -0) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);